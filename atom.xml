<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SONG&#39;BLOG</title>
  
  
  <link href="http://blog.flysong.cn/atom.xml" rel="self"/>
  
  <link href="http://blog.flysong.cn/"/>
  <updated>2020-10-11T13:04:31.000Z</updated>
  <id>http://blog.flysong.cn/</id>
  
  <author>
    <name>song</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL学习笔记</title>
    <link href="http://blog.flysong.cn/posts/f12cbde5.html"/>
    <id>http://blog.flysong.cn/posts/f12cbde5.html</id>
    <published>2020-10-11T13:04:31.000Z</published>
    <updated>2020-10-11T13:04:31.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>什么是SQL</p></blockquote><ul><li>SQL是Structured Query Language(结构化查询语言)的缩写</li><li>SQL是专门为数据库而建立的操作命令集，是一种功能齐全的数据库语言</li></ul><blockquote><p>SQL功能分类</p></blockquote><ul><li>DDL ：数据定义语言，用来定义数据库对象：创建库，表，列等</li><li>DML ：数据操作语言，用来操作数据库表中的记录</li><li>DQL ：数据查询语言，用来查询数据</li><li>DCL ：数据控制语言，用来定义访问权限和安全级别</li></ul><blockquote><p>SQL数据类型</p></blockquote><ul><li>数值类型</li><li>字符串类型</li><li>日期和时间类型</li></ul><blockquote><p>常用数据类型</p></blockquote><ul><li>double</li><li>char</li><li>varchar ： 可变长度字符串类型</li><li>text</li><li>blob ： 二进制类型</li><li>date ：日期类型，格式为yyyy-MM-dd</li><li>time ：时间类型，格式为hh:mm:ss</li><li>datetime ：日期时间类型，格式为yyyy-MM-dd hh:mm:ss</li></ul><h2 id="数据定义语言DDL"><a href="#数据定义语言DDL" class="headerlink" title="数据定义语言DDL"></a>数据定义语言DDL</h2><blockquote><p>创建数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名 <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br></pre></td></tr></table></figure><blockquote><p>修改数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 数据库名 <span class="built_in">character</span> <span class="keyword">set</span> gbk;</span><br></pre></td></tr></table></figure><blockquote><p>创建表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">列名<span class="number">1</span> 列的类型[约束],</span><br><span class="line">    列名<span class="number">2</span> 列的类型[约束],</span><br><span class="line">    ...</span><br><span class="line">    列名N 列的类型[约束]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>添加一列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 列名 数据类型[约束];</span><br></pre></td></tr></table></figure><blockquote><p>修改字段类型</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段名 数据类型[约束];</span><br></pre></td></tr></table></figure><blockquote><p>修改表名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RENAME</span> <span class="keyword">TABLE</span> 原始表名 <span class="keyword">TO</span> 新表名;</span><br></pre></td></tr></table></figure><blockquote><p>修改表的字符集</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称;</span><br></pre></td></tr></table></figure><blockquote><p>修改表的列名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">CHANGE</span> 原始列名 新列名 数据类型[约束];</span><br></pre></td></tr></table></figure><blockquote><p>查看表的字段信息</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC 表名;</span><br></pre></td></tr></table></figure><blockquote><p>查看表的创建细节</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名;</span><br></pre></td></tr></table></figure><blockquote><p>删除一列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> 字段名;</span><br></pre></td></tr></table></figure><blockquote><p>删除表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名;</span><br></pre></td></tr></table></figure><h2 id="数据操作语言DML"><a href="#数据操作语言DML" class="headerlink" title="数据操作语言DML"></a>数据操作语言DML</h2><blockquote><p>插入语句</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名[(列名<span class="number">1</span>,列名<span class="number">2</span>,...)] <span class="keyword">VALUE</span>(列值<span class="number">1</span>,列值<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>列名与列值的类型，个数，顺序要一一对应</li><li>值不要超出列定义的长度</li><li>插入日期和字符一样，都要使用引号括起来</li></ul><p>批量插入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名[(列名<span class="number">1</span>,列名<span class="number">2</span>,...)] <span class="keyword">VALUES</span>(列值<span class="number">1</span>,列值<span class="number">2</span>,...),(列值<span class="number">1</span>,列值<span class="number">2</span>,...),...,(列值<span class="number">1</span>,列值<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;什么是SQL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;SQL是Structured Query Language(结构化查询语言)的缩写&lt;/li&gt;
&lt;li&gt;SQL是专门为数据库而建立的操作命令集，是一种功能齐全的数据库语言&lt;/li&gt;
</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://blog.flysong.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="http://blog.flysong.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java必备书籍推荐</title>
    <link href="http://blog.flysong.cn/posts/797ae441.html"/>
    <id>http://blog.flysong.cn/posts/797ae441.html</id>
    <published>2020-10-07T02:43:01.000Z</published>
    <updated>2020-10-07T02:43:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul><li><strong><a href="https://book.douban.com/subject/2000732/">《Head First Java》</a></strong> ： 可以说是我的 Java 启蒙书籍了，我个人觉得还是很适合稍微有一点点经验的新手来阅读的当然也适合我们用来温故 Java 知识点。<em>ps:刚入门编程，最好的方式还是通过看视频来学习。</em></li><li><strong><a href="https://book.douban.com/subject/25762168/">《Java 核心技术卷 1+卷 2》</a></strong>: 很棒的两本书，建议有点 Java 基础之后再读，介绍的还是比较深入的，非常推荐。这两本书我一般也会用来巩固知识点或者当做工具书参考，是两本适合放在自己身边的好书。</li><li>**<a href="https://book.douban.com/subject/2130190/">《Java 编程思想 (第 4 版)》</a>**（推荐，豆瓣评分 9.1，3.2K+人评价）：大部分人称之为Java领域的圣经，但我不推荐初学者阅读，有点劝退的味道。稍微有点基础后阅读更好。</li><li>**<a href="https://book.douban.com/subject/26259017/">《JAVA 网络编程 第 4 版》</a>**： 可以系统的学习一下网络的一些概念以及网络编程在 Java 中的使用。</li><li>**<a href="https://book.douban.com/subject/26740520/">《Java性能权威指南》</a>**：O’Reilly 家族书，性能调优的入门书，我个人觉得性能调优是每个 Java 从业者必备知识，这本书的缺点就是太老了，但是这本书可以作为一个实战书，尤其是 JVM 调优！不适合初学者。前置书籍：《深入理解 Java 虚拟机》</li></ul><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><ul><li><strong><a href="https://book.douban.com/subject/30351286/">《Java 并发编程之美》</a></strong> ：<strong>我觉得这本书还是非常适合我们用来学习 Java 多线程的。这本书的讲解非常通俗易懂，作者从并发编程基础到实战都是信手拈来。</strong> 另外，这本书的作者加多自身也会经常在网上发布各种技术文章。我觉得这本书也是加多大佬这么多年在多线程领域的沉淀所得的结果吧！他书中的内容基本都是结合代码讲解，非常有说服力！</li><li>**<a href="https://book.douban.com/subject/26663605/">《实战 Java 高并发程序设计》</a>**： 这个是我第二本要推荐的书籍，比较适合作为多线程入门/进阶书籍来看。这本书内容同样是理论结合实战，对于每个知识点的讲解也比较通俗易懂，整体结构也比较清。</li><li>**<a href="https://github.com/RedSpider1/concurrent">《深入浅出 Java 多线程》</a>**：这本书是几位大厂（如阿里）的大佬开源的，Github 地址：<a href="https://github.com/RedSpider1/concurrent%E5%87%A0%E4%BD%8D%E4%BD%9C%E8%80%85%E4%B8%BA%E4%BA%86%E5%86%99%E5%A5%BD%E3%80%8A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA">https://github.com/RedSpider1/concurrent几位作者为了写好《深入浅出</a> Java 多线程》这本书阅读了大量的 Java 多线程方面的书籍和博客，然后再加上他们的经验总结、Demo 实例、源码解析，最终才形成了这本书。这本书的质量也是非常过硬！给作者们点个赞！这本书有统一的排版规则和语言风格、清晰的表达方式和逻辑。并且每篇文章初稿写完后，作者们就会互相审校，合并到主分支时所有成员会再次审校，最后再通篇修订了三遍。</li><li><strong>《Java 并发编程的艺术》</strong> ：这本书不是很适合作为 Java 多线程入门书籍，需要具备一定的 JVM 基础，有些东西讲的还是挺深入的。另外，就我自己阅读这本书的感觉来说，我觉得这本书的章节规划有点杂乱，但是，具体到某个知识点又很棒！这可能也和这本书由三名作者共同编写完成有关系吧！</li><li>……</li></ul><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><ul><li><strong><a href="https://book.douban.com/subject/24722612/">《深入理解 Java 虚拟机（第 3 版）》</a>）</strong>：必读！必读！必读！神书，建议多刷几篇。里面不光有丰富地JVM理论知识，还有JVM实战案例！必读！</li><li>**<a href="https://book.douban.com/subject/26354292/">《实战 JAVA 虚拟机》</a>**：作为入门的了解 Java 虚拟机的知识还是不错的。</li></ul><h3 id="Java8-新特性"><a href="#Java8-新特性" class="headerlink" title="Java8 新特性"></a>Java8 新特性</h3><ul><li>**<a href="https://book.douban.com/subject/26772632/">《Java 8 实战》</a>**：面向 Java 8 的技能升级，包括 Lambdas、流和函数式编程特性。实战系列的一贯风格让自己快速上手应用起来。Java 8 支持的 Lambda 是精简表达在语法上提供的支持。Java 8 提供了 Stream，学习和使用可以建立流式编程的认知。</li><li>**<a href="https://book.douban.com/subject/26556574/">《Java 8 编程参考官方教程》</a>**：建议当做工具书来用！哪里不会翻哪里！</li></ul><h3 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h3><ul><li>**<a href="https://book.douban.com/subject/4262627/">《重构_改善既有代码的设计》</a>**：豆瓣 9.1 分，重构书籍的开山鼻祖。</li><li>**<a href="https://book.douban.com/subject/3360807/">《Effective java 》</a>**：本书介绍了在 Java 编程中很多极具实用价值的经验规则，这些经验规则涵盖了大多数开发人员每天所面临的问题的解决方案。这篇文章能够非常实际地帮助你写出更加清晰、健壮和高效的代码。本书中的每条规则都以简短、独立的小文章形式出现，并通过例子代码加以进一步说明。</li><li>**<a href="https://book.douban.com/subject/5442024/">《代码整洁之道》</a>**：虽然是用 Java 语言作为例子，全篇都是在阐述 Java 面向对象的思想，但是其中大部分内容其它语言也能应用到。</li><li><strong>阿里巴巴 Java 开发手册</strong> ：<a href="https://github.com/alibaba/p3c">https://github.com/alibaba/p3c</a></li><li><strong>Google Java 编程风格指南：</strong> <a href="http://www.hawstein.com/posts/google-java-style.html">http://www.hawstein.com/posts/google-java-style.html</a></li></ul><h3 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h3><ol><li><strong><a href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247486324&idx=1&sn=e8b690ddaedabc486bd399310105aad3&chksm=cea244bff9d5cda9a627fa65235be09e7b089e92cf49c0eb0ceb35b39bbed86c1fab0125f5af&token=1745528586&lang=zh_CN&scene=21#wechat_redirect">《JavaGuide面试突击版》</a></strong> ：我的75k+ star的开源项目 <a href="https://github.com/Snailclimb/JavaGuide">JavaGuide </a>转为面试浓缩而成的版本，不光提供了PDF版本（我的公众号JavaGuide后台回复：“面试突击”即可获取），在线阅读版本：<a href="https://snailclimb.gitee.io/javaguide-interview/%E3%80%82">https://snailclimb.gitee.io/javaguide-interview/。</a></li><li><strong><a href="https://book.douban.com/subject/34872163/">《Offer来了：Java面试核心知识点精讲》</a></strong> : 这本书基本概括了Java程序员面试必备知识点，可以拿来准备Java面试或者夯实基础。不过，我还是更推荐我的 <a href="https://github.com/Snailclimb/JavaGuide">JavaGuide</a> 和 <strong><a href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247486324&idx=1&sn=e8b690ddaedabc486bd399310105aad3&chksm=cea244bff9d5cda9a627fa65235be09e7b089e92cf49c0eb0ceb35b39bbed86c1fab0125f5af&token=1745528586&lang=zh_CN&scene=21#wechat_redirect">《JavaGuide面试突击版》</a></strong> ，两者配合起来学习，真香！</li></ol><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><ul><li>**<a href="https://book.douban.com/subject/25863515/">《图解 HTTP》</a>**： 讲漫画一样的讲 HTTP，很有意思，不会觉得枯燥，大概也涵盖也 HTTP 常见的知识点。因为篇幅问题，内容可能不太全面。不过，如果不是专门做网络方向研究的小伙伴想研究 HTTP 相关知识的话，读这本书的话应该来说就差不多了。</li><li><strong><a href="https://book.douban.com/subject/10746113/">《HTTP 权威指南》</a></strong>:如果要全面了解 HTTP 非此书不可！</li></ul><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><ul><li>**<a href="https://book.douban.com/subject/4889838/">《鸟哥的 Linux 私房菜》</a>**：本书是最具知名度的 Linux 入门书《鸟哥的 Linux 私房菜基础学习篇》的最新版，全面而详细地介绍了 Linux 操作系统。</li></ul><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ul><li>**<a href="https://book.douban.com/subject/6424904/">《大话数据结构》</a>**：入门类型的书籍，读起来比较浅显易懂，适合没有数据结构基础或者说数据结构没学好的小伙伴用来入门数据结构。</li></ul><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ul><li><strong><a href="https://book.douban.com/subject/30357170/">《我的第一本算法书》</a> （豆瓣评分 7.1，0.2K+人评价）</strong> 一本不那么“专业”的算法书籍。和下面两本推荐的算法书籍都是比较通俗易懂，“不那么深入”的算法书籍。我个人非常推荐，配图和讲解都非常不错！</li><li><strong><a href="https://book.douban.com/subject/26979890/">《算法图解》</a>（豆瓣评分 8.4，1.5K+人评价）</strong> ：入门类型的书籍，读起来比较浅显易懂，非常适合没有算法基础或者说算法没学好的小伙伴用来入门。示例丰富，图文并茂，以让人容易理解的方式阐释了算法.读起来比较快，内容不枯燥！</li><li><strong><a href="https://book.douban.com/subject/25894685/">《啊哈!算法》</a> （豆瓣评分 7.7，0.5K+人评价）</strong> ：和《算法图解》类似的算法趣味入门书籍。</li></ul><h3 id="经典"><a href="#经典" class="headerlink" title="经典"></a>经典</h3><blockquote><p>下面这些书籍都是经典中的经典，但是阅读起来难度也比较大，不做太多阐述，神书就完事了！推荐先看 《算法》，然后再选下面的书籍进行进一步阅读。不需要都看，找一本好好看或者找某本书的某一个章节知识点好好看。</p></blockquote><ul><li><strong><a href="https://book.douban.com/subject/10432347/">《算法 第四版》</a>（豆瓣评分 9.3，0.4K+人评价）：</strong> 我在大二的时候被我们的一个老师强烈安利过！自己也在当时购买了一本放在宿舍，到离开大学的时候自己大概看了一半多一点。因为内容实在太多了！另外，这本书还提供了详细的Java代码，非常适合学习 Java 的朋友来看，可以说是 Java 程序员的必备书籍之一了。再来介绍一下这本书籍吧！这本书籍算的上是算法领域经典的参考书，全面介绍了关于算法和数据结构的必备知识，并特别针对排序、搜索、图处理和字符串处理进行了论述。</li><li><strong><a href="https://book.douban.com/subject/3227098/">编程珠玑</a>（豆瓣评分 9.1，2K+人评价）</strong> ：经典名著，被无数读者强烈推荐的书籍，几乎是顶级程序员必看的书籍之一了。这本书的作者也非常厉害，Java之父 James Gosling 就是他的学生。很多人都说这本书不是教你具体的算法，而是教你一种编程的思考方式。这种思考方式不仅仅在编程领域适用，在其他同样适用。</li><li><strong><a href="https://book.douban.com/subject/4048566/">《算法设计手册》</a>（豆瓣评分9.1 ， 45人评价）</strong> :被 <a href="https://teachyourselfcs.com/">Teach Yourself Computer Science</a> 强烈推荐的一本算法书籍。</li><li><strong><a href="https://book.douban.com/subject/20432061/">《算法导论》</a> （豆瓣评分 9.2，0.4K+人评价）</strong></li><li><strong><a href="https://book.douban.com/subject/1130500/">《计算机程序设计艺术（第1卷）》</a>（豆瓣评分 9.4，0.4K+人评价）</strong></li></ul><h3 id="面试-1"><a href="#面试-1" class="headerlink" title="面试"></a>面试</h3><ol><li><strong><a href="https://book.douban.com/subject/6966465/">《剑指Offer》</a>（豆瓣评分 8.3，0.7K+人评价）</strong>这本面试宝典上面涵盖了很多经典的算法面试题，如果你要准备大厂面试的话一定不要错过这本书。《剑指Offer》 对应的算法编程题部分的开源项目解析：<a href="https://github.com/gatieme/CodingInterviews">CodingInterviews</a></li><li><strong><a href="https://book.douban.com/subject/30422021/">程序员代码面试指南：IT名企算法与数据结构题目最优解（第2版）</a> （豆瓣评分 8.7，0.2K+人评价）</strong> ：题目相比于《剑指 offer》 来说要难很多，题目涵盖面相比于《剑指 offer》也更加全面。全书一共有将近300道真实出现过的经典代码面试题。</li><li><strong><a href="https://book.douban.com/subject/3004255/">编程之美</a>（豆瓣评分 8.4，3K+人评价）</strong>：这本书收集了约60道算法和程序设计题目，这些题目大部分在近年的笔试、面试中出现过，或者是被微软员工热烈讨论过。作者试图从书中各种有趣的问题出发，引导读者发现问题，分析问题，解决问题，寻找更优的解法。</li></ol><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><strong>MySQL:</strong></p><ul><li>**<a href="https://book.douban.com/subject/23008813/">《高性能 MySQL》</a>**：这本书不用多说了把！MySQL 领域的经典之作，拥有广泛的影响力。不但适合数据库管理员（dba）阅读，也适合开发人员参考学习。不管是数据库新手还是专家，相信都能从本书有所收获。如果你的时间不够的话，第5章关于索引的内容和第6章关于查询的内容是必读的！</li><li><a href="https://book.douban.com/subject/24708143/">《MySQL 技术内幕-InnoDB 存储引擎》</a>（推荐，豆瓣评分 8.7）：了解 InnoDB 存储引擎底层原理必备的一本书，比较深入。</li></ul><p><strong>Redis:</strong></p><ul><li>**<a href="https://book.douban.com/subject/26612779/">《Redis 实战》</a>**：如果你想了解 Redis 的一些概念性知识的话，这本书真的非常不错。</li><li>**<a href="https://book.douban.com/subject/25900156/">《Redis 设计与实现》</a>**：也还行吧！</li></ul><h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ul><li><strong><a href="https://book.douban.com/subject/1052241/">《设计模式 : 可复用面向对象软件的基础》</a></strong> ：设计模式的经典！</li><li><strong><a href="https://book.douban.com/subject/2243615/">《Head First 设计模式（中文版）》</a></strong> ：相当赞的一本设计模式入门书籍。用实际的编程案例讲解算法设计中会遇到的各种问题和需求变更（对的，连需求变更都考虑到了！），并以此逐步推导出良好的设计模式解决办法。</li><li><strong><a href="https://book.douban.com/subject/2334288/">《大话设计模式》</a></strong> ：本书通篇都是以情景对话的形式，用多个小故事或编程示例来组织讲解GOF(即《设计模式 : 可复用面向对象软件的基础》这本书))，但是不像《设计模式 : 可复用面向对象软件的基础》难懂。但是设计模式只看书是不够的，还是需要在实际项目中运用，在实战中体会。</li></ul><h3 id="常用框架"><a href="#常用框架" class="headerlink" title="常用框架"></a>常用框架</h3><h4 id="Spring-SpringBoot"><a href="#Spring-SpringBoot" class="headerlink" title="Spring/SpringBoot"></a>Spring/SpringBoot</h4><ul><li><strong><a href="https://book.douban.com/subject/26767354/">《Spring 实战（第 4 版）》</a></strong> ：不建议当做入门书籍读，入门的话可以找点国人的书或者视频看。这本定位就相当于是关于 Spring 的新华字典，只有一些基本概念的介绍和示例，涵盖了 Spring 的各个方面，但都不够深入。就像作者在最后一页写的那样：“学习 Spring，这才刚刚开始”。</li><li><strong>《<a href="https://book.douban.com/subject/30452948/">Spring源码深度解析 第2版</a>》</strong> ：读Spring源码必备的一本书籍。市面上关于Spring源码分析的书籍太少了。</li><li><strong><a href="https://book.douban.com/subject/30452637/">《Spring 5高级编程（第5版）》</a></strong> ：推荐阅读，对于Spring5的新特性介绍的很好！不过内容比较多，可以作为工具书参考。</li><li><strong><a href="https://read.douban.com/ebook/58113975/?dcs=subject-rec&dcm=douban&dct=26767354">《精通Spring4.x企业应用开发实战》</a></strong> :通过实战讲解，比较适合作为Spring入门书籍来看。</li><li><strong><a href="https://book.douban.com/subject/26652876/">《Spring入门经典》</a></strong> ：适合入门，也有很多示例！</li><li><strong><a href="https://book.douban.com/subject/34894533/">《Spring Boot实战派》</a></strong> ：这本书使用的Spring Boot 2.0+的版本，还算比较新。整本书采用“知识点+实例”的形式编写。本书通过“58个基于知识的实例+2个综合性的项目”，深入地讲解Spring Boot的技术原理、知识点和具体应用；把晦涩难懂的理论用实例展现出来，使得读者对知识的理解变得非常容易，同时也立即学会如何使用它。说实话，我还是比较推荐这本书的。</li><li><strong><a href="https://book.douban.com/subject/33390560/">《Spring Boot编程思想（核心篇）》</a></strong> ：SpringBoot深入书，不适合初学者。书尤其的厚，这本书的缺点是书的很多知识点的讲解过于啰嗦和拖沓，优点是书中对SpringBoot内部原理讲解很清楚。</li></ul><h4 id="Netty"><a href="#Netty" class="headerlink" title="Netty"></a>Netty</h4><ul><li><strong><a href="https://book.douban.com/subject/30381214/">《Netty进阶之路：跟着案例学Netty》</a></strong> : 这本书的优点是有不少实际的案例的讲解，通过案例来学习是很不错的！</li><li><strong><a href="https://waylau.gitbooks.io/netty-4-user-guide/content/">《Netty 4.x 用户指南》</a></strong> ：《Netty 4.x 用户指南》中文翻译（包含了官方文档以及其他文章）。</li><li><strong><a href="https://juejin.im/book/5b4bc28bf265da0f60130116?referrer=59fbb2daf265da4319559f3a">《Netty 入门与实战：仿写微信 IM 即时通讯系统》</a></strong> ：基于 Netty 框架实现 IM 核心系统，带你深入学习 Netty 网络编程核心知识</li><li><strong><a href="https://book.douban.com/subject/27038538/">《Netty 实战》</a></strong> ：可以作为工具书参考！</li></ul><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h3><ul><li>**<a href="https://book.douban.com/subject/26292004/">《从 Paxos 到 Zookeeper》</a>**：简要介绍几种典型的分布式一致性协议，以及解决分布式一致性问题的思路，其中重点讲解了 Paxos 和 ZAB 协议。同时，本书深入介绍了分布式一致性问题的工业解决方案——ZooKeeper，并着重向读者展示这一分布式协调框架的使用方法、内部实现及运维技巧，旨在帮助读者全面了解 ZooKeeper，并更好地使用和运维 ZooKeeper。</li><li>**<a href="https://book.douban.com/subject/27591386/">《RabbitMQ 实战指南》</a>**：《RabbitMQ 实战指南》从消息中间件的概念和 RabbitMQ 的历史切入，主要阐述 RabbitMQ 的安装、使用、配置、管理、运维、原理、扩展等方面的细节。如果你想浅尝 RabbitMQ 的使用，这本书是你最好的选择；如果你想深入 RabbitMQ 的原理，这本书也是你最好的选择；总之，如果你想玩转 RabbitMQ，这本书一定是最值得看的书之一</li><li>**<a href="https://book.douban.com/subject/27025912/">《Spring Cloud 微服务实战》</a>**：从时下流行的微服务架构概念出发，详细介绍了 Spring Cloud 针对微服务架构中几大核心要素的解决方案和基础组件。对于各个组件的介绍，《Spring Cloud 微服务实战》主要以示例与源码结合的方式来帮助读者更好地理解这些组件的使用方法以及运行原理。同时，在介绍的过程中，还包含了作者在实践中所遇到的一些问题和解决思路，可供读者在实践中作为参考。</li></ul><h3 id="网站架构"><a href="#网站架构" class="headerlink" title="网站架构"></a>网站架构</h3><ul><li><strong><a href="https://book.douban.com/subject/25723064/">《大型网站技术架构：核心原理与案例分析+李智慧》</a></strong>:这本书我读过，基本不需要你有什么基础啊~读起来特别轻松，但是却可以学到很多东西，非常推荐了。另外我写过这本书的思维导图，关注我的微信公众号：“Java 面试通关手册”回复“大型网站技术架构”即可领取思维导图。</li><li>**<a href="https://book.douban.com/subject/26999243/">《亿级流量网站架构核心技术》</a>**：一书总结并梳理了亿级流量网站高可用和高并发原则，通过实例详细介绍了如何落地这些原则。本书分为四部分：概述、高可用原则、高并发原则、案例实战。从负载均衡、限流、降级、隔离、超时与重试、回滚机制、压测与预案、缓存、池化、异步化、扩容、队列等多方面详细介绍了亿级流量网站的架构核心技术，让读者看后能快速运用到实践项目中。</li><li><strong><a href="https://book.douban.com/subject/30335935/">《从零开始学架构（李运华）》</a></strong> ： 这本书对应的有一个极客时间的专栏—《从零开始学架构》，里面的很多内容都是这个专栏里面的，两者买其一就可以了。我看了很小一部分，内容挺全面的，是一本真正在讲如何做架构的书籍。</li><li><strong><a href="https://book.douban.com/subject/33389549/">《架构修炼之道——亿级网关、平台开放、分布式、微服务、容错等核心技术修炼实践》</a></strong> ：非常喜欢的一本书，对一些知识点比如消息队列、API网管讲解的很好,通俗易懂。</li></ul><h3 id="底层"><a href="#底层" class="headerlink" title="底层"></a>底层</h3><ul><li>**<a href="https://book.douban.com/subject/10426640/">《深入剖析 Tomcat》</a>**：本书深入剖析 Tomcat 4 和 Tomcat 5 中的每个组件，并揭示其内部工作原理。通过学习本书，你将可以自行开发 Tomcat 组件，或者扩展已有的组件。 读完这本书，基本可以摆脱背诵面试题的尴尬。</li><li>**<a href="https://book.douban.com/subject/26745255/">《深入理解 Nginx（第 2 版）》</a>**：作者讲的非常细致，注释都写的都很工整，对于 Nginx 的开发人员非常有帮助。优点是细致，缺点是过于细致，到处都是代码片段，缺少一些抽象。</li></ul><h2 id="软件设计之道"><a href="#软件设计之道" class="headerlink" title="软件设计之道"></a>软件设计之道</h2><ul><li><strong><a href="https://book.douban.com/subject/1102259/">《人月神话》</a></strong> ： 非常值得阅读的一本书籍。看书名感觉的第一眼感觉不像是技术类的书籍。这本书对于现代软件尤其是复杂软件的开发的规范化有深刻的意义。</li><li><strong>《领域驱动设计:软件核心复杂性应对之道》</strong> ： 这本领域驱动设计方面的经典之作一直被各种推荐，但是我还来及读。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>**<a href="https://read.douban.com/ebook/387525/?dcs=subject-rec&dcm=douban&dct=2243615">《黑客与画家》</a>**：这本书是硅谷创业之父，Y Combinator 创始人 Paul Graham 的文集。之所以叫这个名字，是因为作者认为黑客（并非负面的那个意思）与画家有着极大的相似性，他们都是在创造，而不是完成某个任务。</li><li><strong><a href="https://book.douban.com/subject/26265544/">《图解密码技术》</a>**：本书以</strong>图配文**的形式，第一部分讲述了密码技术的历史沿革、对称密码、分组密码模式（包括ECB、CBC、CFB、OFB、CTR）、公钥、混合密码系统。第二部分重点介绍了认证方面的内容，涉及单向散列函数、消息认证码、数字签名、证书等。第三部分讲述了密钥、随机数、PGP、SSL/TLS 以及密码技术在现实生活中的应用。关键字：JWT 前置知识、区块链密码技术前置知识。属于密码知识入门书籍。、</li><li>《程序开发心理学》 、《程序员修炼之道，从小工道专家》、 《高效程序员的45个习惯，敏捷开发修炼之道》 、《高效能程序员的修炼》 、《软技能，代码之外的生存之道》 、《程序员的职业素养》 、《程序员的思维修炼》</li></ul><blockquote><p>原文：<a href="https://github.com/Snailclimb/JavaGuide/blob/master/docs/books/java.md">https://github.com/Snailclimb/JavaGuide/blob/master/docs/books/java.md</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h2&gt;&lt;h3 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h</summary>
      
    
    
    
    <category term="资源分享" scheme="http://blog.flysong.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Java书籍" scheme="http://blog.flysong.cn/tags/Java%E4%B9%A6%E7%B1%8D/"/>
    
  </entry>
  
  <entry>
    <title>springboot整合</title>
    <link href="http://blog.flysong.cn/posts/1766cb87.html"/>
    <id>http://blog.flysong.cn/posts/1766cb87.html</id>
    <published>2020-10-02T11:48:25.000Z</published>
    <updated>2020-10-02T11:48:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-缓存"><a href="#1-缓存" class="headerlink" title="1.缓存"></a>1.缓存</h1><h2 id="Spring抽象缓存"><a href="#Spring抽象缓存" class="headerlink" title="Spring抽象缓存"></a>Spring抽象缓存</h2><ul><li>@Cacheable</li><li>@CachePut</li><li>@CacheEvict</li><li>@Caching</li><li>@CacheConfig</li></ul><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><ul><li><p>stringRedisTemplate.opsForValue()：String字符串</p></li><li><p>stringRedisTemplate.opsForList()：List列表</p></li><li><p>stringRedisTemplate.opsForSet()：Set集合</p></li><li><p>stringRedisTemplate.opsForHash()：Hash散列</p></li><li><p>stringRedisTemplate.opsForZSet()：ZSet有序集合</p></li></ul><h1 id="2-消息"><a href="#2-消息" class="headerlink" title="2.消息"></a>2.消息</h1><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h2><h1 id="3-检索"><a href="#3-检索" class="headerlink" title="3.检索"></a>3.检索</h1><h3 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h3><table><thead><tr><th>ElasticSearch</th><th>MySQL</th></tr></thead><tbody><tr><td>索引</td><td>数据库</td></tr><tr><td>类型</td><td>表</td></tr><tr><td>文档</td><td>记录</td></tr><tr><td>属性</td><td>字段</td></tr></tbody></table><p><img src="/posts/1766cb87/image-20201002152231285.png" alt="image-20201002152231285"></p><h1 id="4-任务"><a href="#4-任务" class="headerlink" title="4.任务"></a>4.任务</h1><p>异步任务、定时任务、邮件任务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-缓存&quot;&gt;&lt;a href=&quot;#1-缓存&quot; class=&quot;headerlink&quot; title=&quot;1.缓存&quot;&gt;&lt;/a&gt;1.缓存&lt;/h1&gt;&lt;h2 id=&quot;Spring抽象缓存&quot;&gt;&lt;a href=&quot;#Spring抽象缓存&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://blog.flysong.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SpringBoot" scheme="http://blog.flysong.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity入门</title>
    <link href="http://blog.flysong.cn/posts/4c9d6007.html"/>
    <id>http://blog.flysong.cn/posts/4c9d6007.html</id>
    <published>2020-09-27T01:48:25.000Z</published>
    <updated>2020-09-27T01:48:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h2><p><img src="/posts/4c9d6007/image-20200927095536020.png" alt="image-20200927095536020"></p><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.flysong<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hello-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hello-security<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 在Thymeleaf页面中使用权限标签--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="前端页面"><a href="#前端页面" class="headerlink" title="前端页面"></a>前端页面</h2><p><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;!isAuthenticated()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;isAuthenticated()&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">&quot;principal.username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    角色：<span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">&quot;principal.authorities&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/logout&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span>level1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span>level2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span>level3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level1/1&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span>1-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level2/1&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span>2-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level3/1&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span>3-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level1/2&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span>1-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level2/2&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span>2-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level3/2&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span>3-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level1/3&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span>1-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level2/3&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span>2-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level3/3&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span>3-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>login.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    username:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    password:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;remember&quot;</span>&gt;</span>记住我 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>level1</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">1.html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">level1-1</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">2.html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">level1-2</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">3.html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">level1-3</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>level2、level3同理</p><h2 id="RouterController"><a href="#RouterController" class="headerlink" title="RouterController"></a>RouterController</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.flysong.hello.security.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouterController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/&quot;, &quot;/index&quot;&#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/level1/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level1</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span><span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level1/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/level2/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level2</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span><span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level2/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/level3/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level3</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span><span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level3/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SecurityConfig"><a href="#SecurityConfig" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.flysong.hello.security.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level1/**&quot;</span>).hasRole(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level2/**&quot;</span>).hasRole(<span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level3/**&quot;</span>).hasRole(<span class="string">&quot;vip3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        http.formLogin()</span><br><span class="line">                .usernameParameter(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">                .passwordParameter(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">                .loginPage(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line"></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        http.csrf().disable();</span><br><span class="line"></span><br><span class="line">        http.rememberMe().rememberMeParameter(<span class="string">&quot;remember&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//内存中模拟用户名密码</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                .withUser(<span class="string">&quot;root&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;guest&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;jack&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;项目目录结构&quot;&gt;&lt;a href=&quot;#项目目录结构&quot; class=&quot;headerlink&quot; title=&quot;项目目录结构&quot;&gt;&lt;/a&gt;项目目录结构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/posts/4c9d6007/image-20200927095536020.png&quot;</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://blog.flysong.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Spring Security" scheme="http://blog.flysong.cn/tags/Spring-Security/"/>
    
  </entry>
  
  <entry>
    <title>搭建hexo博客并部署到Github</title>
    <link href="http://blog.flysong.cn/posts/29246a40.html"/>
    <id>http://blog.flysong.cn/posts/29246a40.html</id>
    <published>2020-09-26T08:06:18.000Z</published>
    <updated>2020-09-26T08:06:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前博客是用vuepress搭建的，但我觉得并不是我喜欢的类型。无意之间发现一个我喜欢的主题的博客，使用hexo搭建的，于是前段时间花了一下午也搭建起了自己的博客。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo">安装 Hexo</a> 步骤。</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">安装程序</a>。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Mac 用户</p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p>Windows 用户</p><p>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node">淘宝 Node.js 镜像</a> 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 <a href="https://github.com/jasongin/nvs/">nvs</a>（推荐）或者<a href="https://github.com/nvm-sh/nvm">nvm</a> 安装。</li><li>Mac：使用 <a href="https://brew.sh/">Homebrew</a> 或 <a href="http://www.macports.org/">MacPorts</a> 安装。</li><li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/">指导</a></li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p><blockquote><p>Windows 用户</p><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p></blockquote><blockquote><p>For Mac / Linux 用户</p><p>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">由 npmjs 发布的指导</a> 修复该问题。强烈建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p></blockquote><blockquote><p>Linux</p><p>If you installed Node.js using Snap, you may need to manually run <code>npm install</code> in the target folder when <a href="https://hexo.io/docs/commands#init">initializing</a> a blog.</p></blockquote><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><p>新建一个文件夹，然后进入到该文件夹下</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>执行这两个命令后就初始化好了</p><p>可以使用下面的命令本地运行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>项目初始化后，目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><h3 id="GitHub创建一个仓库"><a href="#GitHub创建一个仓库" class="headerlink" title="GitHub创建一个仓库"></a>GitHub创建一个仓库</h3><p>登录GitHub账号，new 一个 repository</p><p><img src="/posts/29246a40/image-20200926162150871.png" alt="image-20200926162150871"></p><p><img src="/posts/29246a40/image-20200926162427556.png" alt="image-20200926162427556"></p><h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><p>在博客根目录下打开cmd</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。</p><p>然后创建SSH，一路回车即可</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>在控制台提示的生成目录下找到 <code>id_rsa.pub</code>，把里面的信息复制，然后回到GitHub，在头像-&gt;settings-&gt;SSH and GPG keys-&gt;new ssh key，把<code>id_rsa.pub</code>复制的信息复制到key里面，title随便取一个就行。</p><p>然后可以在cmd中查看是否成功</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="部署hexo到仓库"><a href="#部署hexo到仓库" class="headerlink" title="部署hexo到仓库"></a>部署hexo到仓库</h3><p>打开博客根目录下的 <code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><code>repo</code>就是你的仓库网址</p><p>然后安装depoly-git</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p><p>注意deploy时可能要你输入username和password。</p><p>过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了!</p><h2 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h2><p>在阿里云注册一个域名，然后添加CNAME解析，解析值是yourname.github.io</p><p>登录GitHub，在仓库的settings-&gt;options-&gt;GitHub Pages-&gt;Custom domain 设置你的域名</p><p>然后在博客<code>source</code>文件夹下新建一个名为<code>CNAME</code>的文件，不要后缀，内容为你的个人域名。</p><p>最后再次部署</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>过一会就可以用自己的域名访问了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前博客是用vuepress搭建的，但我觉得并不是我喜欢的类型。无意之间发现一个我喜欢的主题的博客，使用hexo搭建的，于是前段时间花了一下</summary>
      
    
    
    
    <category term="技术分享" scheme="http://blog.flysong.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="hexo" scheme="http://blog.flysong.cn/tags/hexo/"/>
    
    <category term="博客搭建" scheme="http://blog.flysong.cn/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>IDEA2020.2版本创建SpringBoot项目后一直reading maven project</title>
    <link href="http://blog.flysong.cn/posts/562ed06b.html"/>
    <id>http://blog.flysong.cn/posts/562ed06b.html</id>
    <published>2020-09-25T16:00:00.000Z</published>
    <updated>2020-09-25T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题起源"><a href="#问题起源" class="headerlink" title="问题起源"></a>问题起源</h2><p>今天下午本来想入门一下spring security，没想到卡在新建项目上了。新建一个spring boot项目之后，IDEA一直卡在reading maven project那里不动，于是我又新建了好几次，又以为是网络问题又换了网络，最后百度解决了。</p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>这个问题应该是IDEA2020.2这个版本引起的。<br><em>可能原因</em>：由于第一次用spring Initializr创建maven的项目，它不会找IDEA自带的maven，也不会找你配置的本地maven，而是重新下载一个全新的maven（而且用的是外网下载，特别慢，也导致电脑卡）</p><blockquote><p>解决方法<br>把 <code>.mvn/wrapper</code> 文件夹下的 <code>maven-wrapper.properties</code> 文件给删了，或者直接把 <code>.mvn</code> 目录删了。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题起源&quot;&gt;&lt;a href=&quot;#问题起源&quot; class=&quot;headerlink&quot; title=&quot;问题起源&quot;&gt;&lt;/a&gt;问题起源&lt;/h2&gt;&lt;p&gt;今天下午本来想入门一下spring security，没想到卡在新建项目上了。新建一个spring boot项目之后，IDE</summary>
      
    
    
    
    <category term="技术分享" scheme="http://blog.flysong.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="IDEA2020.2" scheme="http://blog.flysong.cn/tags/IDEA2020-2/"/>
    
  </entry>
  
  <entry>
    <title>春庭雪</title>
    <link href="http://blog.flysong.cn/posts/e7a91616.html"/>
    <id>http://blog.flysong.cn/posts/e7a91616.html</id>
    <published>2020-07-12T08:21:35.000Z</published>
    <updated>2020-09-23T02:14:12.874Z</updated>
    
    <content type="html"><![CDATA[<p>庭中梨花谢又一年</p><p>立清宵 月华洒空阶</p><p>梦里笙箫奏旧乐</p><p>梦醒泪染胭脂面</p><p>小重山 念一遍又一遍</p><p>闻 更漏咽 频教前尘辞长夜</p><p>久无眠 深坐对宫檐</p><p>多情最是春庭雪</p><p>年年落满离人苑</p><p>薛涛笺 上言若如初见</p><p>这一世</p><p>太漫长却止步咫尺天涯间</p><p>谁仍记 那梨花若雪时节</p><p>我心匪石不可转</p><p>我心匪席不可卷</p><p>空凝眸 情字深浅无解</p><p><a href="https://c.y.qq.com/base/fcgi-bin/u?__=s6AZVhy">春庭雪</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;庭中梨花谢又一年&lt;/p&gt;
&lt;p&gt;立清宵 月华洒空阶&lt;/p&gt;
&lt;p&gt;梦里笙箫奏旧乐&lt;/p&gt;
&lt;p&gt;梦醒泪染胭脂面&lt;/p&gt;
&lt;p&gt;小重山 念一遍又一遍&lt;/p&gt;
&lt;p&gt;闻 更漏咽 频教前尘辞长夜&lt;/p&gt;
&lt;p&gt;久无眠 深坐对宫檐&lt;/p&gt;
&lt;p&gt;多情最是春庭雪&lt;/p&gt;
&lt;p&gt;年年落</summary>
      
    
    
    
    <category term="生活随笔" scheme="http://blog.flysong.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="人间词话" scheme="http://blog.flysong.cn/tags/%E4%BA%BA%E9%97%B4%E8%AF%8D%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目打包后除了第一个页面其余全部404</title>
    <link href="http://blog.flysong.cn/posts/62aa5ba1.html"/>
    <id>http://blog.flysong.cn/posts/62aa5ba1.html</id>
    <published>2020-07-11T10:00:35.000Z</published>
    <updated>2020-09-23T02:14:12.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题起源："><a href="#问题起源：" class="headerlink" title="问题起源："></a>问题起源：</h1><p>这几天心血来潮，决定将博客改版，用Vue+SpringBoot把博客改成前后端分离的。没有系统学过Vue，就是看了一些视频直接写的。写了一天多的Vue前端，结果在打包部署的时候遇到了<strong>问题</strong>：打包以后部署在nginx上，首页是可以正常显示的，但是点其他页面无法显示，全部是显示404NOT FOUND。搞了一下午一晚上也没搞定，最后终于在第二天早上看了一篇文章搞定了。</p><h1 id="解决过程："><a href="#解决过程：" class="headerlink" title="解决过程："></a>解决过程：</h1><p>我看了一下network里的请求，发现remoteAddress都是前端服务器地址，百度了一些就以为是跨域的问题，结果配置了代理，没用。</p><p>看了好多文章说一些什么vue.config.js的配置问题，什么config文件夹下的index.js配置问题，结果我这项目目录下压根它也没有这些配置文件啊，对这些配置文件也是一点不了解，头秃。。。</p><p>来到官网：<a href="https://www.sogou.com/link?url=hedJjaC291NA4zbHKlAAkwr4sXjsZK93w9VE6AbE6s2t5pUc3zy0dg">https://www.sogou.com/link?url=hedJjaC291NA4zbHKlAAkwr4sXjsZK93w9VE6AbE6s2t5pUc3zy0dg</a>..</p><p>看了文档才逐渐了解一些配置的属性。</p><h4 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h4><p><code>vue.config.js</code> 是一个可选的配置文件，如果项目的 (和 <code>package.json</code> 同级的) 根目录中存在这个文件，那么它会被 <code>@vue/cli-service</code> 自动加载。你也可以使用 <code>package.json</code> 中的 <code>vue</code> 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。</p><p>这个文件应该导出一个包含了选项的对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// 选项...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="baseUrl"><a href="#baseUrl" class="headerlink" title="baseUrl"></a>baseUrl</h4><p>从 Vue CLI 3.3 起已弃用，请使用<a href="https://cli.vuejs.org/zh/config/#publicPath"><code>publicPath</code></a>。</p><h4 id="publicPath"><a href="#publicPath" class="headerlink" title="publicPath"></a>publicPath</h4><ul><li><p>Type: <code>string</code></p></li><li><p>Default: <code>&#39;/&#39;</code></p><p>部署应用包时的基本 URL。用法和 webpack 本身的 <code>output.publicPath</code> 一致，但是 Vue CLI 在一些其他地方也需要用到这个值，所以**请始终使用 <code>publicPath</code> 而不要直接修改 webpack 的 <code>output.publicPath</code>**。</p><p>默认情况下，Vue CLI 会假设你的应用是被部署在一个域名的根路径上，例如 <code>https://www.my-app.com/</code>。如果应用被部署在一个子路径上，你就需要用这个选项指定这个子路径。例如，如果你的应用被部署在 <code>https://www.my-app.com/my-app/</code>，则设置 <code>publicPath</code> 为 <code>/my-app/</code>。</p><p>这个值也可以被设置为空字符串 (<code>&#39;&#39;</code>) 或是相对路径 (<code>&#39;./&#39;</code>)，这样所有的资源都会被链接为相对路径，这样打出来的包可以被部署在任意路径，也可以用在类似 Cordova hybrid 应用的文件系统中。</p><p>相对 publicPath 的限制</p><p>相对路径的 <code>publicPath</code> 有一些使用上的限制。在以下情况下，应当避免使用相对 <code>publicPath</code>:</p><ul><li>当使用基于 HTML5 <code>history.pushState</code> 的路由时；</li><li>当使用 <code>pages</code> 选项构建多页面应用时。</li></ul><p>这个值在开发环境下同样生效。如果你想把开发服务器架设在根路径，你可以使用一个条件式的值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  publicPath: process.env.NODE_ENV === <span class="string">&#x27;production&#x27;</span></span><br><span class="line">    ? <span class="string">&#x27;/production-sub-path/&#x27;</span></span><br><span class="line">    : <span class="string">&#x27;/&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="问题解决："><a href="#问题解决：" class="headerlink" title="问题解决："></a>问题解决：</h1><p>最后我是在项目根目录下新建vue.config.js，在文件里面加入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    publicPath: <span class="string">&quot;/&quot;</span>, <span class="comment">//部署应用包时的基本 URL</span></span><br><span class="line">    outputDir: <span class="string">&quot;dist&quot;</span>, <span class="comment">//打包目录</span></span><br><span class="line">    indexPath: <span class="string">&quot;index.html&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>网上很多说要把 publicPath: “/“,改成 publicPath: “./“,但我试了很多次都不行，还是要写成  “/“</p><p>并且在nginx目录的conf/nginx.conf文件中作如下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">try_files $uri $uri/ /index.html;</span><br><span class="line">//在里面加了一句：try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>最终将打包好的dist文件夹里的css、fonts、js、favicon.ico、index.html扔到nginx的html文件夹下，即可正常访问项目。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题起源：&quot;&gt;&lt;a href=&quot;#问题起源：&quot; class=&quot;headerlink&quot; title=&quot;问题起源：&quot;&gt;&lt;/a&gt;问题起源：&lt;/h1&gt;&lt;p&gt;这几天心血来潮，决定将博客改版，用Vue+SpringBoot把博客改成前后端分离的。没有系统学过Vue，就是看了一</summary>
      
    
    
    
    <category term="技术分享" scheme="http://blog.flysong.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Vue" scheme="http://blog.flysong.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot中使用Ueditor</title>
    <link href="http://blog.flysong.cn/posts/aaf29486.html"/>
    <id>http://blog.flysong.cn/posts/aaf29486.html</id>
    <published>2020-05-27T11:23:53.000Z</published>
    <updated>2020-09-23T02:14:12.867Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://ueditor.baidu.com/website/download.html">百度Ueditor</a></p><p><img src="http://qiniu.flysong.cn/images/20205271843469.png"></p><p>下载完成后解压，得到 utf8-jsp 文件夹，将其重命名为 ueditor，再将其复制到springboot 项目中</p><p><img src="http://qiniu.flysong.cn/images/202052718455480.png"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><strong>1.在项目中添加以下依赖：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ueditor--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>20160810<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 跨域上传文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后重点关注这些文件</p><p><img src="http://qiniu.flysong.cn/images/202052718495554.png"></p><blockquote><p>config.json：上传功能的主要配置项</p><p>ueditor.config.js：完整配置项</p></blockquote><p><strong>2.在页面中引用（此处用的是Thymeleaf）：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/static/ueditor/ueditor.config.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/static/ueditor/ueditor.all.min.js&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/static/ueditor/lang/zh-cn/zh-cn.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3.实例化编辑器：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;editor&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/plain&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;height:800px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">/*实例化编辑器 */</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> um = UE.getEditor(<span class="string">&#x27;editor&#x27;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：此时上传功能不正常，可以在开发者工具中看见“后端配置项不正确，上传功能无法使用”的情况</p><p><strong>问题缘由：</strong></p><p><img src="http://qiniu.flysong.cn/images/202052718595013.png"></p><p>请求过来了，它会走 controller.jsp，但是 springboot 默认是不支持 jsp 的，然而这个 jsp 它是指向 config.json 的，打开 config.json，第一个就是图片上传的相关配置：</p><p><img src="http://qiniu.flysong.cn/images/20205271905831.png"></p><p>所以就是 springboot 它无法访问 controller.jsp，也就无法读到 config.json 里的相关配置，所以报错。</p><p><strong>解决办法：</strong></p><blockquote><p>思路：既然 springboot 无法通过 jsp 访问到 config.json，那就不走 jsp，直接让它获得 config.json 里的配置。</p></blockquote><p><strong>1.新建一个Controller，内容如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传配置：即不走config.json，模拟config.json里的内容，解决后端配置项不正确，无法上传的问题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/ueditor/config&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">uploadConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String s = <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;            \&quot;imageActionName\&quot;: \&quot;uploadimage\&quot;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageFieldName\&quot;: \&quot;upfile\&quot;, \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageMaxSize\&quot;: 2048000, \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageAllowFiles\&quot;: [\&quot;.png\&quot;, \&quot;.jpg\&quot;, \&quot;.jpeg\&quot;, \&quot;.gif\&quot;, \&quot;.bmp\&quot;], \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageCompressEnable\&quot;: true, \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageCompressBorder\&quot;: 1600, \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageInsertAlign\&quot;: \&quot;none\&quot;, \n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imageUrlPrefix\&quot;: \&quot;\&quot;,\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;                \&quot;imagePathFormat\&quot;: \&quot;/upload/images/&#123;yyyy&#125;&#123;mm&#125;&#123;dd&#125;/&#123;filename&#125;\&quot; &#125;&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.修改 ueditor.config.js 里的 serverUrl 为上面定义的 url</strong></p><p><img src="http://qiniu.flysong.cn/images/2020527194785.png"></p><p><strong>3.因为SpringBoot项目是以jar打包的，我希望将文件上传到项目目录中，因此我新建一个SSM项目（fileUploadServer）作为文件上传服务器，即实现跨服务器文件上传</strong></p><p>创建文件服务器流程：</p><p>新建一个maven项目，选择web骨架创建：</p><p><img src="http://qiniu.flysong.cn/images/202052719103111.png"></p><p>项目创建好后，不需要做任何配置，只需配置tomcat启动即可</p><p><img src="http://qiniu.flysong.cn/images/2020527198283.png"></p><p>启动文件服务器，在浏览器访问：</p><p><img src="http://qiniu.flysong.cn/images/20205271913014.png"></p><p><strong>4.接下来在配置编辑器的页面配置一下上传：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 手动指定上传文件调用的接口（不同文件类型不同接口）</span><br><span class="line">UE.Editor.prototype._bkGetActionUrl = UE.Editor.prototype.getActionUrl;</span><br><span class="line">UE.Editor.prototype.getActionUrl = function(action) &#123;</span><br><span class="line">    // 这里很重要，很重要，很重要，要和配置中的imageActionName值一样</span><br><span class="line">    if(action == &#x27;uploadimage&#x27;)&#123;</span><br><span class="line">        // 这里调用后端我们写的图片上传接口</span><br><span class="line">        return &#x27;/ueditor/upload&#x27;;</span><br><span class="line">    &#125;else if(action == &#x27;uploadfile&#x27;)&#123;</span><br><span class="line">        return &#x27;/ueditor/upload&#x27;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return this._bkGetActionUrl.call(this, action);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>即：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">/*实例化编辑器 */</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> um = UE.getEditor(<span class="string">&#x27;editor&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 手动指定上传文件调用的接口（不同文件类型不同接口）</span></span></span><br><span class="line">UE.Editor.prototype._bkGetActionUrl = UE.Editor.prototype.getActionUrl;</span><br><span class="line"><span class="javascript">UE.Editor.prototype.getActionUrl = <span class="function"><span class="keyword">function</span>(<span class="params">action</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 这里很重要，很重要，很重要，要和配置中的imageActionName值一样</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(action == <span class="string">&quot;uploadimage&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 这里调用后端我们写的图片上传接口</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="string">&quot;/ueditor/upload&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(action == <span class="string">&quot;uploadfile&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="string">&quot;/ueditor/upload&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">this</span>._bkGetActionUrl.call(<span class="built_in">this</span>, action);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.后端定义图片上传接口（使用ueditor自带的上传是不现实的）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sky.blog.admin.commons.BaseController;</span><br><span class="line"><span class="keyword">import</span> com.sun.jersey.api.client.Client;</span><br><span class="line"><span class="keyword">import</span> com.sun.jersey.api.client.WebResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@PostMapping(&amp;quot;/ueditor/upload&amp;quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Map&amp;lt;String,String&amp;gt; uploadImage(MultipartFile upfile, HttpServletRequest request)&#123;</span><br><span class="line">        String originalName = upfile.getOriginalFilename();</span><br><span class="line">        String fileSuffix = originalName.substring(originalName.lastIndexOf(&amp;quot;.&amp;quot;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成新文件名</span></span><br><span class="line">        Calendar now = Calendar.getInstance();</span><br><span class="line">        <span class="keyword">int</span> year = now.get(Calendar.YEAR);</span><br><span class="line">        <span class="keyword">int</span> month = now.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> day = now.get(Calendar.DAY_OF_MONTH);</span><br><span class="line">        <span class="keyword">int</span> hour = now.get(Calendar.HOUR_OF_DAY);</span><br><span class="line">        <span class="keyword">int</span> minute = now.get(Calendar.MINUTE);</span><br><span class="line">        <span class="keyword">int</span> second = now.get(Calendar.SECOND);</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        String newName = &amp;quot;&amp;quot;+year+month+day+hour+minute+second+random.nextInt(<span class="number">100</span>) + fileSuffix;</span><br><span class="line">         <span class="comment">//文件存放路径</span></span><br><span class="line">        String path = &amp;quothttp:<span class="comment">//localhost/upload/images/&amp;quot; //这里就是我们刚刚创建的文件服务器 </span></span><br><span class="line">        <span class="comment">// 创建客户端的对象</span></span><br><span class="line">        Client client = Client.create();</span><br><span class="line">        <span class="comment">//和图片服务器进行连接</span></span><br><span class="line">        String url = path + newName;</span><br><span class="line">        WebResource webResource = client.resource(url);</span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            webResource.put(upfile.getBytes());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&amp;lt;String,String&amp;gt; result = <span class="keyword">new</span> HashMap&amp;lt;&amp;gt;();</span><br><span class="line">        result.put(&amp;quot;state&amp;quot;,&amp;quot;SUCCESS&amp;quot;);</span><br><span class="line">        result.put(&amp;quot;url&amp;quot;,url);</span><br><span class="line">        result.put(&amp;quot;title&amp;quot;,newName);</span><br><span class="line">        result.put(&amp;quot;original&amp;quot;,newName);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来编辑器就可以上传图片啦，还有一些上传视频，音乐的功能也可以类似的编写后台接口来实现。</p><p><strong>存在的问题：</strong></p><p>这样实现的跨服务器文件上传是不安全的，因为文件服务器没有任何权限限制，只要知道服务器地址即可无限制地上传文件，因此这个问题有待解决，后续我将花时间继续研究。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://ueditor.baidu.com/website/download.html&quot;&gt;百度Ueditor&lt;/a&gt;</summary>
      
    
    
    
    <category term="技术分享" scheme="http://blog.flysong.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="springboot" scheme="http://blog.flysong.cn/tags/springboot/"/>
    
    <category term="Ueditor" scheme="http://blog.flysong.cn/tags/Ueditor/"/>
    
  </entry>
  
  <entry>
    <title>树莓派4B环境搭建及初步设置</title>
    <link href="http://blog.flysong.cn/posts/29a5b123.html"/>
    <id>http://blog.flysong.cn/posts/29a5b123.html</id>
    <published>2020-02-01T11:28:21.000Z</published>
    <updated>2020-09-23T02:14:12.891Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-将开启SSH功能的镜像写入SD卡"><a href="#1-将开启SSH功能的镜像写入SD卡" class="headerlink" title="1.将开启SSH功能的镜像写入SD卡"></a>1.将开启SSH功能的镜像写入SD卡</h1><pre><code>1.用SDFormatter格式化SD卡2.用Win32DiskImager将下载好的镜像写入SD卡</code></pre><h1 id="2-设置开机自动连接WIFI"><a href="#2-设置开机自动连接WIFI" class="headerlink" title="2.设置开机自动连接WIFI"></a>2.设置开机自动连接WIFI</h1><pre><code>1.用读卡器读取SD卡，在boot分区下新建名为 wpa_supplicant.conf 的文件2.在文件内写入以下内容:country=CNctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=1network=&#123;    ssid=&quot;WiFi-A&quot;    psk=&quot;12345678&quot;    key_mgmt=WPA-PSK    priority=1&#125;network=&#123;    ssid=&quot;WiFi-B&quot;    psk=&quot;12345678&quot;    key_mgmt=WPA-PSK    priority=2&#125;注：两个不同的wifi优先级设置相同可能会导致不能自动连接WiFi树莓派开机自动连接WiFi后进入路由器配置界面查看树莓派IP，通过IP即可通过ssh连接树莓派。（此方法不再需要网线）</code></pre><h1 id="3-解决乱码问题"><a href="#3-解决乱码问题" class="headerlink" title="3.解决乱码问题"></a>3.解决乱码问题</h1><pre><code>1.进入树莓派系统2.输入 sudo raspi-config3.语言设置为en_US.UTF-84.cd /etc/default/5.sudo nano locale6.将locale内键值对的值全部修改为en_US.UTF-87.sudo reboot</code></pre><h1 id="4-设置开机自动启动VNC"><a href="#4-设置开机自动启动VNC" class="headerlink" title="4.设置开机自动启动VNC"></a>4.设置开机自动启动VNC</h1><pre><code>1.进入树莓派2.sudo rapsi-config3.开启vnc4.sudo reboot5.sudo nano /etc/init.d/vncserver6.复制以下内容并保存：        #!/bin/sh        ### BEGIN INIT INFO        # Provides:          vncserver        # Required-Start:    $local_fs        # Required-Stop:     $local_fs        # Default-Start:     2 3 4 5        # Default-Stop:      0 1 6        # Short-Description: Start/stop vncserver        ### END INIT INFO        # More details see:        # http://www.penguintutor.com/linux/vnc        ### Customize this entry        # Set the USER variable to the name of the user to start vncserver under        export USER=&#39;pi&#39;        ### End customization required        eval cd ~$USER        case &quot;$1&quot; in          start)            # 启动命令行。此处自定义分辨率、控制台号码或其它参数。            su $USER -c &#39;/usr/bin/vncserver -depth 16 -geometry 1024x768 :1&#39;            echo &quot;Starting VNC server for $USER &quot;            ;;          stop)            # 终止命令行。此处控制台号码与启动一致。            su $USER -c &#39;/usr/bin/vncserver -kill :1&#39;            echo &quot;vncserver stopped&quot;            ;;          *)            echo &quot;Usage: /etc/init.d/vncserver &#123;start|stop&#125;&quot;            exit 1            ;;        esac        exit 07.sudo chmod 755 /etc/init.d/vncserver8.添加开机启动项：sudo update-rc.d vncserver defaults9.sudo reboot</code></pre><h1 id="安装opencv"><a href="#安装opencv" class="headerlink" title="安装opencv"></a>安装opencv</h1><pre><code>参照：https://docs.opencv.org/4.2.0/d7/d9f/tutorial_linux_install.html1.sudo apt-get update2.sudo apt-get install build-essential3.sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev4.sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev5.下载opencv源码，并通过FileZilla传输给树莓派6.解压opencv源码至家目录下7.cd ~8.cd opencv9.mkdir build10.cd build11.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ..12.make -j7 # runs 7 jobs in parallel（如果失败则重复命令）13.sudo make install（如果失败则重复命令）14.opencv安装完成，测试：        1.python3        2.import cv2        3.cv2.__version__        4.若输出opencv版本号则安装成功</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-将开启SSH功能的镜像写入SD卡&quot;&gt;&lt;a href=&quot;#1-将开启SSH功能的镜像写入SD卡&quot; class=&quot;headerlink&quot; title=&quot;1.将开启SSH功能的镜像写入SD卡&quot;&gt;&lt;/a&gt;1.将开启SSH功能的镜像写入SD卡&lt;/h1&gt;&lt;pre&gt;&lt;cod</summary>
      
    
    
    
    <category term="技术分享" scheme="http://blog.flysong.cn/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="树莓派" scheme="http://blog.flysong.cn/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记一</title>
    <link href="http://blog.flysong.cn/posts/d27d9f8c.html"/>
    <id>http://blog.flysong.cn/posts/d27d9f8c.html</id>
    <published>2020-01-28T03:24:26.000Z</published>
    <updated>2020-09-23T02:14:12.848Z</updated>
    
    <content type="html"><![CDATA[<p><strong>day1 2020-01-14</strong></p><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><pre><code>操作系统的作用：用来管理硬件设备</code></pre><h1 id="Linux内核及发行版"><a href="#Linux内核及发行版" class="headerlink" title="Linux内核及发行版"></a>Linux内核及发行版</h1><pre><code>内核（kernel）</code></pre><h1 id="Linux系统（Ubuntu为例）"><a href="#Linux系统（Ubuntu为例）" class="headerlink" title="Linux系统（Ubuntu为例）"></a>Linux系统（Ubuntu为例）</h1><pre><code>* 没有盘符的概念，只有一个根目录 /，所有文件都在它下面* 各用户在 home目录下各自有一个文件夹#Linux主要目录    · /：根目录，一般根目录下只存放目录，在Linux下有且只有一个目录，所有的东西都是从这里开始    · /bin、/usr/bin：可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等    · /dev：存放Linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备    · /etc：系统配置文件存放的目录，不建议在此目录下执行可执行文件    · /home：系统默认的用户家目录，新增用户账号时，用户家目录都存放在此目录下</code></pre><h1 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h1><pre><code>* Linux发行版中的命令大概有200多个，但是常用的命令之哟10多个而已 * 小技巧：     ctrl + shift + = 放大终端字体    ctrl + - 缩小字体    自动补全 Tab：在敲出 文件/目录/命令 的前几个字母之后按下Tab键如果没有歧义会自动补全    Ctrl + C：另起一行新命令，不执行当前命令行的命令*常用Linux命令的基本使用序号        命令                对应英文                    作用1        ls                list                    查看当前文件夹下的内容2        pwd                print work directory    查看当前所在文件夹3        cd[目录名]        change directory        切换文件夹4        touch[文件名]    touch                    如果文件不存在，新建文件5        mkdir[目录名]    make directory            创建目录6        rm[文件名]        remove                    删除指定的文件名7        clear            clear                    清屏* 终端命令格式    command [-options] [parameter]    * command：命令名，相应功能的英文单词或单词的缩写    * [-options]：选项，可用来对命令进行控制，也可以省略    * [parameter]：传给命令的参数，可以是 零个 一个 或者 多个    * []：代表可选*查询命令帮助的信息    1. --help        格式:command --help    2. man(manual的缩写，是Linux提供的一个手册，包含了绝大部分的命令、函数的使用说明)        * 格式:man command        * 使用man时的操作键：             空格键 显示手册页的下一屏             Enter键 一次滚动手册页的一行             b 回滚一屏             f    前滚一屏             q 退出             /word 搜索word字符串</code></pre><p><strong>day2 2020-01-15</strong></p><h1 id="ls-命令"><a href="#ls-命令" class="headerlink" title="ls 命令"></a>ls 命令</h1><pre><code>* Linux下文件和目录的特点    * Linux文件或者目录名称最长可以有256个字符    * 以.开头的文件为隐藏文件，需要用-a参数才能显示    * .代表当前目录    * ..代表上一级目录* ls常用选项    * -a：显示指定目录下所有子目录与文件，包括隐藏文件    * -l：以列表方式显示文件的详细信息    * -h：配合-l以人性化的方式显示文件大小* ls通配符的使用    * *：代表任意个数个字符    * ?：代表任意一个字符，至少一个    * []：代表可以匹配字符组中的任意一个    * [abc]：匹配a、b、c中的任意一个    * [a-f]：匹配从a到f范围内的任意一个字符</code></pre><h1 id="cd-命令"><a href="#cd-命令" class="headerlink" title="cd 命令"></a>cd 命令</h1><pre><code>注意：Linux所有的目录和文件名都是大小写敏感的* cd常用命令    * cd  ：切换到当前用户的主目录（/home/用户目录）    * cd ~：切换到当前用户的主目录（/home/用户目录）    * cd .：保持在当前目录不变    * cd ..：切换到上级目录    * cd -：可以在最近两次工作目录之间来回切换* 相对路径和绝对路径    * 相对路径：在输入路径时，最前面不是/或者~，表示相对当前目录所在的目录位置    * 绝对路径：在输入路径时，最前面是/或者~，表示从根目录/家目录开始的具体目录位置</code></pre><h1 id="touch-命令"><a href="#touch-命令" class="headerlink" title="touch 命令"></a>touch 命令</h1><pre><code>*作用：创建文件或修改文件时间    *如果文件不存在，可以创建一个空白文件    *如果文件存在，可以修改文件的末次修改日期    </code></pre><h1 id="mkdir-命令"><a href="#mkdir-命令" class="headerlink" title="mkdir 命令"></a>mkdir 命令</h1><pre><code>*作用：创建一个新的目录，新建目录的名称不能与当前目录中已有的目录或文件同名*选项：    -p：递归创建目录（创建多级目录）</code></pre><h1 id="rm-命令"><a href="#rm-命令" class="headerlink" title="rm 命令"></a>rm 命令</h1><pre><code>*作用：删除文件或目录，删除后不能恢复*选项：    -f：强制删除，忽略不存在的文件，无需提示    -r：递归地删除目录下地内容，删除文件夹时必须要加此参数</code></pre><p><strong>day3 2020-01-16</strong></p><h1 id="拷贝和移动文件"><a href="#拷贝和移动文件" class="headerlink" title="拷贝和移动文件"></a>拷贝和移动文件</h1><pre><code>序号        命令                    对应英文        作用01        tree[目录名]            tree        以树状图列出文件目录结构02        cp 源文件 目标文件    copy        复制文件或目录03        mv 源文件 目标文件    move        移动文件或者目录/文件或者目录重名</code></pre><h1 id="tree-命令"><a href="#tree-命令" class="headerlink" title="tree 命令"></a>tree 命令</h1><pre><code>*作用：可以以树状图列出文件目录结构*选项：    -d：只显示目录</code></pre><h1 id="cp-命令"><a href="#cp-命令" class="headerlink" title="cp 命令"></a>cp 命令</h1><pre><code>*作用：将给出的文件或目录复制到另一个文件或目录中*选项：    -f：已经存在的目标文件直接覆盖，不会提示    -i：覆盖文件前提示    -r：若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</code></pre><h1 id="mv-命令"><a href="#mv-命令" class="headerlink" title="mv 命令"></a>mv 命令</h1><pre><code>*作用：用来移动文件或目录，也可以给文件或目录重命名*选项：    -i：覆盖文件前提示</code></pre><h1 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h1><pre><code>序号        命令                    对应英文        作用    01        cat 文件名            concatenate    查看文件内容、创建文件、文件合并、追加文件内容等功能02        more 文件名            more        分屏显示文件内容03        grep 搜索文本、文件名    grep        搜索文本文件内容</code></pre><h1 id="cat-命令"><a href="#cat-命令" class="headerlink" title="cat 命令"></a>cat 命令</h1><pre><code>* 用来查看文件内容、创建文件、文件合并、追加文件内容等功能* cat 会一次显示所有内容，适合查看内容较少的文本文件* 选项：    * -b：对非空输出行编号    * -n：对输出的所有行编号    * Linux中还有一个nl的命令和cat -b 的效果等价</code></pre><h1 id="grep-命令"><a href="#grep-命令" class="headerlink" title="grep 命令"></a>grep 命令</h1><pre><code>    * Linux系统中grep命令是一种强大的文本搜索工具    * grep允许对文本文件进行模式查找，所谓模式查找又被称为正则表达式    选项          含义    -n            显示匹配行及行号    -v            显示不包含匹配文本的所有行（相当于求反）    -i            忽略大小写*常用的两种模式查找参数          含义^a            行首，搜寻以a开头的行ke$           行尾，搜寻以ke结束的行</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;day1 2020-01-14&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;操作系统的作用：用来管理硬件</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://blog.flysong.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="http://blog.flysong.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记二</title>
    <link href="http://blog.flysong.cn/posts/e9fdb125.html"/>
    <id>http://blog.flysong.cn/posts/e9fdb125.html</id>
    <published>2020-01-28T03:24:26.000Z</published>
    <updated>2020-09-23T02:14:12.857Z</updated>
    
    <content type="html"><![CDATA[<h1 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h1><pre><code> *echo 命令   @ echo会在终端中显示参数指定的文字，通常会和重定向联合使用 *重定向&gt;和&gt;&gt;    @ Linux允许将命令执行结果重定向到一个文件    @ 将本应显示在终端上的内容输出/追加 到指定文件中    @ &gt;表示输出，会覆盖文件原有的内容    @ &gt;&gt;表示追加，会将内容追加到已有文件的末尾 *管道    @ Linux允许将 一个命令的输出 可以通过管道作为 另一个命令的输入    @ 可以理解为现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里 |的左右分为两端，左端塞东西（写），右端取东西（读）    @ 常用的管道命令有：        *more：分屏显示内容        *grep：在命令执行结果的基础上查询指定的文本</code></pre><h1 id="远程管理常用命令"><a href="#远程管理常用命令" class="headerlink" title="远程管理常用命令"></a>远程管理常用命令</h1><pre><code>* 关机/重启    序号    命令                对于英文    作用    01      shutdown 选项 时间  shutdown    关机/重新启动*shutdown    shutdown命令可以安全关闭或者重新启动系统    选项    含义    -r      重新启动    提示：        *不指定选项和参数，默认表示1分钟之后关闭电脑        *远程维护服务器时，最好不要关闭系统，而应重启系统    常用命令实例：        #重新启动操作系统，其中 now 表示现在        $ shutdown -r now        #立刻关机，其中 now 表示现在        $ shutdown now        #系统在今天的20:25会关机        $shutdown 20:25        #系统再过十分钟后自动关闭        $shutdown +10        #取消之前指定的关机计划        $shutdown -c*查看或配置网卡信息    序号    命令        对应英文                        作用    01      ifconfig    configure a network interface   查看/配置计算机当前的网卡配置信息    02      ping ip地址 ping                            检测到目标IP地址的链接是否正常*网卡和IP地址    *网卡        网卡是一个专门负责网络通讯的硬件设备        IP地址是设置在网卡上的地址信息        @我们可以把电脑比作电话，网卡相当于SIM卡，IP地址相当于电话号码    *IP地址        每台联网的电脑上都有IP地址，是保证电脑之间正常通讯的重要设置        @注意：每台电脑的IP地址不能相同，否则会出现IP地址冲突，并且没有办法正常通讯    *ifconfig        ifconfig可以查看/配置当前计算机当前的网卡配置信息        #查看网卡配置信息        $ifconfig        #查看网卡对应的IP地址        $ifconfig | grep inet        *提示：一台计算机中有可能会有一个物理网卡和多个虚拟网卡，在Linux中物理网卡的名字通常以ensXX表示        *127.0.0.1被称为本地回环/环回地址，一般用来测试本机网卡是否正常    *ping        #检测到目标主机是否连接正常        $ping IP地址        #检测本地网卡工作正常        $ping 127.0.0.1       @ ping一般用于检测当前计算机到目标计算机之间的网络是否通畅，数值越大，速度越慢       @ ping的工作原理与潜水艇的声纳相似，ping这个命令就是取自声纳的声音       @ 网络管理员之间也常将ping用作动词----ping一下计算机X，看他是否开着       @ 原理：网络上的机器都有唯一确定IP地址，我们给目标IP地址发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在       @ 提示：在Linux中，想要终止一个终端程序的执行，绝大多数都可以使用CTRL + C</code></pre><h1 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h1><pre><code>*远程登陆和复制文件    序号    命令                                              对应英文        作用    01      ssh 用户名@ip                                     secure shell   关机/重新启动    02      scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径   secure copy    远程复制文件*SSH(Secure Shell)客户端的简单使用    ssh [-p port] user@remote*scp(掌握)    命令格式：    scp -P port 01.txt user@remote:Desktop/01.txt    scp -P port user@remote:Desktop/01.txt 01.txt    #加上-r 选项可以传送文件夹    scp -r demo user@remote:Desktop*FTP传输文件（Windows下）    FileZilla软件</code></pre><h1 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h1><pre><code>*用户权限相关命令    对文件/目录的权限包括：    序号    权限  英文    缩写    数字代号    01      读   read    r        4    02      写   write   w        2    03      执行 excute  x        1   ls -l 命令结果显示解析：  -rw-rw-r-- 1 user user    43  5月  9  05:56  01.py  drwxrwxr-x 2 user user  4096  5月  4  14:49  aaa  ls -l 可以查看文件夹下文件的详细信息，从左到右依次是：  @ 权限，第一个字符如果是d表示目录  @ 硬链接数，通俗的讲，就是有多少种方式，可以访问到当前目录/文件  @ 拥有者，家目录下 文件/目录 的拥有者通常都是当前用户  @ 组，在Linux中，很多时候，会出现组名和用户名相同的情况  @ 大小    @ 时间  @ 名称                    目录        拥有者权限      组权限      其他用户权限  文件权限示例        -          r  w  -        r  w  -     r  -  -  目录权限示例        d          r  w  x        r  w  x     r  -  x  chmod简单使用：    chmod 可以修改 用户/组 对 文件/目录 的权限    命令格式如下：    chmod +(-)(r)(w)(x) 文件名|目录名*sudo  *su(substitute user)，表示使用另一个用户的身份  *sudo 命令用来以其他身份来执行命令，预设的身份为root  *用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码  *若其未经授权的用户企图使用sudo，则会发出警告邮件给管理员</code></pre><h1 id="组管理"><a href="#组管理" class="headerlink" title="组管理"></a>组管理</h1><pre><code>*组管理 终端命令  提示：创建组/删除组 的终端命令都需要通过sudo执行  序号    命令                      作用  01      groupadd 组名             添加组  02      groupdel 组名             删除组  03      cat /etc/group            确认组信息  04      chgrp -R 组名 文件/目录名  递归修改文件/目录的所属组  提示：      组信息保存在 /etc/group 文件中      /etc 目录是专门用来保存 系统配置信息 的目录</code></pre><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><pre><code>* 用户管理 终端命令  提示：创建用户/删除用户/修改其他用户密码 的终端名都需要通过sudo执行  *创建用户/设置密码/删除用户  序号    命令                          作用              说明  01      useradd -m -g 组 新建用户名   添加新用户          1.-m自动建立用户家目录2.-g指定用户所在的组，否则会建立一个和用户同名的组  02      passwd 用户名              设置用户密码        如果是普通用户，直接用passwd可以修改自己的账户密码  03      userdel -r 用户名            删除用户           -r选项会自动删除用户家目录  04      cat /etc/passwd|group 用户名  确认用户信息     新建用户后，用户信息会保存在/etc/passwd 文件中*查看用户信息  序号    命令          作用  01      id [用户名]    查看用户UID和GID信息  02      who            查看当前所有登录的用户列表  03      whoami          查看当前登陆用户的账户名*usermod    usermod可以用来设置用户的主组/附加组和登陆shell，命令格式如下：    主组：通常在新建用户时指定，在etc/passwd的第4列GID对应的组    附加组：在etc/group中最后一列表示改组的用户列表，用于指定用户的附加权限    #修改用户的主组：    $usermod -g 组 用户名    #修改用户的附加组    $usermod -G 组 用户名    #修改用户登陆shell    usermod -s /bin/bash    注意：默认使用useradd添加的用户时没有权限使用sudo以root身份执行命令的，可以使用以下命令，将用户添加到sudo附加组中：    usermod -G sudo 用户名* which    which命令可以查看执行命令所在的位置，例如which ls*切换用户  su 用户名（切换用户）  su -用户名（切换到用户家目录）*修改文件权限  #修改文件 目录的拥有者  chown 用户名 文件名|目录名  #递归修改文件|目录的组  chgrp -R 组名 文件名|目录名  #递归修改文件权限  chmod -R 755 文件名|目录名</code></pre><h1 id="系统信息相关命令"><a href="#系统信息相关命令" class="headerlink" title="系统信息相关命令"></a>系统信息相关命令</h1><pre><code>*时间和日期   date 作用：查看系统时间   cal  作用：calendar查看日历，-y选项可以查看一年的日历*磁盘信息  df -h 作用：disk free 显示磁盘剩余空间  du -h [目录名] 作用：disk usage 显示目录下的文件大小*进程信息  ps aux 作用：process status 查看进程的详细状况  top 作用：动态显示运行中的进程并且排序  kill [-9] 进程代号 作用：终止指定代号的进程，-9表示强行终止  选项：  a 含义：显示终端上的所有进程，包括其他用户的进程  u 含义：显示进程的详细状态  x 含义：显示没有控制终端的进程</code></pre><h1 id="其他命令-1"><a href="#其他命令-1" class="headerlink" title="其他命令"></a>其他命令</h1><pre><code>*查找文件find [路径] -name &quot;.py&quot; 作用：查找指定路径下扩展名是.py的文件，包括子目录例如：find -name &quot;*1*&quot;     find -name &quot;*.txt&quot;*软链接（相当于快捷方式）ln -s 被链接的源文件 链接文件 作用：建立文件的软链接，用通俗的方式讲类似于Windows下的快捷方式注意：没有-s选项建立的是一个硬链接文件。源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用*打包压缩#打包文件tar -cvf 打包文件.tar 被打包的文件/路径#解包文件tar -xvf 打包文件.tar选项：c 含义：在生成档案文件，创建打包文件x 含义：解开档案文件v 含义：列出归档解档的详细过程，显示进度f 含义：指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后*压缩和解压缩用gzip压缩tar打包后的文件，其扩展名一般用xxx.tar.gz在tar命令中有一个选项-z可以调用gzip，从而可以方便的实现压缩和解压缩的功能#压缩文件tar -zcvf 打包文件.tar.gz 被压缩的文件/路径#解压缩文件tar -zxvf 打包文件.tar.gz#解压缩到指定路径tar -zxvf 打包文件.tar.gz -C 目标路径*bzip2压缩 #压缩文件tar -jcvf 打包文件.tar.bz2 被压缩的文件/路径#解压缩文件tar -jxvf 打包文件.tar.bz2#解压缩到指定路径</code></pre><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><pre><code>*通过apt安装/卸载软件  apt是Advanced Packaging Tool，是Linux下的一款安装包管理工具  可以在终端中方便的安装/卸载/更新软件包#安装软件$ sudo apt install 软件包#卸载软件$ sudo apt remove 软件名#更新已安装的包$ sudo apt upgrade</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;其他命令&quot;&gt;&lt;a href=&quot;#其他命令&quot; class=&quot;headerlink&quot; title=&quot;其他命令&quot;&gt;&lt;/a&gt;其他命令&lt;/h1&gt;&lt;pre&gt;&lt;code&gt; *echo 命令
   @ echo会在终端中显示参数指定的文字，通常会和重定向联合使用
 *重定向&amp;gt</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://blog.flysong.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="http://blog.flysong.cn/tags/Linux/"/>
    
  </entry>
  
</feed>
